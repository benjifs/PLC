{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/blog/capstone/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/blog/capstone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport hypothesis from \"../apis/hypothesis\";\nexport var fetchAnnots = function fetchAnnots(json) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return json.get({});\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: \"FETCH_ANNOTS\",\n                  payload: response.data.rows\n                }); // return {\n                //   type: \"FETCH_ANNOTS\",\n                //   payload: response\n                // };\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/blog/capstone/src/actions/index.js"],"names":["hypothesis","fetchAnnots","json","dispatch","getState","get","response","type","payload","data","rows"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,oBAAvB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AACjC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAeC,QAAf,EAAyBC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAOkBF,IAAI,CAACG,GAAL,CAAS,EAAT,CAPlB;;AAAA;AAOCC,gBAAAA,QAPD;AAaLH,gBAAAA,QAAQ,CAAC;AAAEI,kBAAAA,IAAI,EAAE,cAAR;AAAwBC,kBAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAA/C,iBAAD,CAAR,CAbK,CAeL;AACA;AACA;AACA;;AAlBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBD,CArBM","sourcesContent":["import hypothesis from \"../apis/hypothesis\";\n\nexport const fetchAnnots = json => {\n  return async function(dispatch, getState) {\n    // const response = await hypothesis.get(\"/search\", {\n    //   params: {\n    //     user: \"acct:lejlabukvic@hypothes.is\"\n    //   }\n    // });\n\n    const response = await json.get({\n      // params: {\n      //   user: \"acct:lejlabukvic@hypothes.is\"\n      // }\n    });\n\n    dispatch({ type: \"FETCH_ANNOTS\", payload: response.data.rows });\n\n    // return {\n    //   type: \"FETCH_ANNOTS\",\n    //   payload: response\n    // };\n  };\n};\n"]},"metadata":{},"sourceType":"module"}