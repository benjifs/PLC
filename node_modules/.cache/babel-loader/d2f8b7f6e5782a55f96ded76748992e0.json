{"ast":null,"code":"import _classCallCheck from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/src/components/NetworkMap.js\";\nimport \"../css/NetworkMap.css\";\nimport React from \"react\";\nimport networkIcon from \"../assets/connection.png\";\nimport zc from \"@dvsl/zoomcharts\";\nvar Chart = zc.NetChart; // Zoomcharts license and license key\n\nwindow.ZoomChartsLicense = \"ZCS-101rm718m: ZoomCharts SDK 30 day Free Trial License for che..@..l.com (valid for testing only); upgrades until: 2020-03-21\";\nwindow.ZoomChartsLicenseKey = \"39d8cd3eba17f98d5c4b5862a4db1effed5b48b4f96a0d9450\" + \"229bb8b24b0f012c2e95c31e6fdd092901628a73aa3511b6aca50b26575c1dc9c5033b42243a0\" + \"842344a7ea2b32b34cbfc406ea3ea1e1950de24892ebcf773a8157a460fa346039dbd27458a43\" + \"1b5a855d2da8c211526c28caba6402542aac71a8af5b2e3982387394dbf9f4b450da9b8017aad\" + \"08d6e9057b6f40cfa3f52c7cec3b38a40e93e5b6074da373c42810f8f7171396566c2ffacbb12\" + \"5fcf57332ec7afb9264fc6d35a2bb9e20830093d469d92fef823020004ec2dd7f908ee9a7bfb6\" + \"c5fd0134969d7dca1050eeffed66884866f97ae26895c32dd13c8e5cf6c9c37e4a1169ccdaa01\";\n\nvar NetworkMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NetworkMap, _React$Component);\n\n  function NetworkMap() {\n    _classCallCheck(this, NetworkMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NetworkMap).apply(this, arguments));\n  }\n\n  _createClass(NetworkMap, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // console.log(\"pass tag here:\", this.props.passTag);\n      // console.log(\"show me\", this.props.searchedAnnots.data);\n      var selectedTag = this.props.passTag;\n      var array = this.props.searchedAnnots.data.filter(function (arr) {\n        return arr.references === undefined;\n      });\n      var annotArray = array.map(function (arr) {\n        return {\n          created: arr.created,\n          document: arr.document,\n          links: arr.links,\n          tags: arr.tags,\n          target: arr.target,\n          text: arr.text,\n          uri: arr.uri,\n          user: arr.user.substring(arr.user.indexOf(\":\") + 1, arr.user.indexOf(\"@\"))\n        };\n      });\n      console.log(\"no references:\", annotArray);\n      var arrayModify = annotArray.reduce(function (o, cur) {\n        var occurs = o.reduce(function (n, item, i) {\n          return item.user === cur.user ? i : n;\n        }, -1);\n\n        if (occurs >= 0) {\n          o[occurs].text = o[occurs].text.concat(cur.text);\n        } else {\n          var obj = {\n            user: cur.user,\n            text: [cur.text]\n          };\n          o = o.concat([obj]);\n        }\n\n        return o;\n      }, []);\n      console.log(\"same user array:\", arrayModify);\n      var newNodesM = [];\n      var newNodesT = [];\n      var newLinksM = [];\n      var newLinksT = []; // nodes data\n\n      for (var i = 0; i < arrayModify.length; i++) {\n        newNodesM.push({\n          id: \"A\" + i,\n          style: {\n            label: arrayModify[i].user,\n            fillColor: \"#65BCF8\",\n            lineColor: \"#59A8DF\"\n          },\n          loaded: true\n        });\n      }\n\n      var newNodesMM = [{\n        id: \"T\",\n        style: {\n          label: selectedTag,\n          fillColor: \"#912F40\",\n          lineColor: \"#AB1927\"\n        },\n        loaded: true\n      }].concat(newNodesM);\n\n      for (var j = 0; j < arrayModify.length; j++) {\n        if (arrayModify[j].text.length > 1) {\n          for (var k = 0; k < arrayModify[j].text.length; k++) {\n            newNodesT.push({\n              id: \"A\" + j + \"N\" + k,\n              style: {\n                label: arrayModify[j].text[k],\n                fillColor: \"#68CF9D\",\n                lineColor: \"#62BC90\"\n              },\n              loaded: true,\n              multiple: \"yes\"\n            });\n          }\n        } else {\n          newNodesT.push({\n            id: \"A\" + j + \"N\" + j,\n            style: {\n              label: array[j].text,\n              fillColor: \"#68CF9D\",\n              lineColor: \"#62BC90\"\n            },\n            loaded: true\n          });\n        }\n      }\n\n      var newNodes = newNodesMM.concat(newNodesT);\n      console.log(\"newNodes\", newNodes); // links data\n\n      for (var i = 0; i < newNodesM.length; i++) {\n        newLinksM.push({\n          id: \"L\" + i,\n          from: newNodesM[i].id,\n          to: \"T\",\n          type: \"creators\"\n        });\n      }\n\n      for (var i = 0; i < newNodesT.length; i++) {\n        newLinksT.push({\n          id: \"LN\" + i,\n          from: newNodesT[i].id,\n          to: newNodesT[i].id.substring(newNodesT[i].id.indexOf(\"A\"), newNodesT[i].id.indexOf(\"N\")),\n          type: \"annots\"\n        });\n      }\n\n      var newLinks = newLinksM.concat(newLinksT);\n      console.log(\"newLinks\", newLinks);\n\n      if (selectedTag !== \"\") {\n        var t = new Chart({\n          container: document.getElementById(\"chartTimeChart\"),\n          area: {\n            style: {\n              fillColor: \"#f9fbfd\"\n            }\n          },\n          navigation: {\n            focusNodeExpansionRadius: 1,\n            initialNodes: [\"T\"],\n            mode: \"focusnodes\"\n          },\n          layout: {\n            mode: \"radial\",\n            nodeSpacing: 30\n          },\n          style: {\n            node: {\n              display: \"roundtext\",\n              lineWidth: 2,\n              lineColor: \"#2fc32f\"\n            },\n            nodeLabel: {\n              textStyle: {\n                fillColor: \"white\"\n              } // nodeStyleFunction: function(node) {\n              //   node.image =\n              //     \"https://zoomcharts.com/dvsl/data/net-chart/friend-net/\" +\n              //     node.id +\n              //     \".png\";\n              //   node.label = node.data.name;\n              // }\n\n            }\n          },\n          data: {\n            preloaded: {\n              nodes: newNodes,\n              links: newLinks\n            }\n          },\n          toolbar: {\n            fullscreen: true,\n            enabled: true\n          },\n          interaction: {\n            resizing: {\n              enabled: false\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"renderAnnots\",\n    value: function renderAnnots() {\n      // console.log(\"annotprops\", this.props.searchedAnnots.data);\n      // console.log(\n      //   \"annotprops jason\",\n      //   JSON.stringify(this.props.searchedAnnots.data)\n      // );\n      if (this.props.passTag == \"\") {\n        return React.createElement(\"div\", {\n          className: \"img-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"temp-image\",\n          src: networkIcon,\n          alt: \"network icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"temp-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text-color-red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, \"Choose\"), \" or\", \" \", React.createElement(\"span\", {\n          className: \"text-color-blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"Search\"), \" the Tag \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }), \" to Create Your Personal Learning Network\"));\n      } // return this.props.searchedAnnots.data.map(annot => {\n      //   return (\n      //     <div key={annot.id}>\n      //       <p>{annot.user}</p>\n      //       <p>{annot.text}</p>\n      //       <p className=\"tags\">{annot.tags.join(\", \")}</p>\n      //     </div>\n      //   );\n      // });\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"map-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chartTimeChart\",\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, this.renderAnnots()));\n    }\n  }]);\n\n  return NetworkMap;\n}(React.Component);\n\nexport default NetworkMap;","map":{"version":3,"sources":["/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/src/components/NetworkMap.js"],"names":["React","networkIcon","zc","Chart","NetChart","window","ZoomChartsLicense","ZoomChartsLicenseKey","NetworkMap","selectedTag","props","passTag","array","searchedAnnots","data","filter","arr","references","undefined","annotArray","map","created","document","links","tags","target","text","uri","user","substring","indexOf","console","log","arrayModify","reduce","o","cur","occurs","n","item","i","concat","obj","newNodesM","newNodesT","newLinksM","newLinksT","length","push","id","style","label","fillColor","lineColor","loaded","newNodesMM","j","k","multiple","newNodes","from","to","type","newLinks","t","container","getElementById","area","navigation","focusNodeExpansionRadius","initialNodes","mode","layout","nodeSpacing","node","display","lineWidth","nodeLabel","textStyle","preloaded","nodes","toolbar","fullscreen","enabled","interaction","resizing","renderAnnots","Component"],"mappings":"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","sourcesContent":["import \"../css/NetworkMap.css\";\nimport React from \"react\";\nimport networkIcon from \"../assets/connection.png\";\nimport zc from \"@dvsl/zoomcharts\";\n\nlet Chart = zc.NetChart;\n\n// Zoomcharts license and license key\nwindow.ZoomChartsLicense =\n  \"ZCS-101rm718m: ZoomCharts SDK 30 day Free Trial License for che..@..l.com (valid for testing only); upgrades until: 2020-03-21\";\nwindow.ZoomChartsLicenseKey =\n  \"39d8cd3eba17f98d5c4b5862a4db1effed5b48b4f96a0d9450\" +\n  \"229bb8b24b0f012c2e95c31e6fdd092901628a73aa3511b6aca50b26575c1dc9c5033b42243a0\" +\n  \"842344a7ea2b32b34cbfc406ea3ea1e1950de24892ebcf773a8157a460fa346039dbd27458a43\" +\n  \"1b5a855d2da8c211526c28caba6402542aac71a8af5b2e3982387394dbf9f4b450da9b8017aad\" +\n  \"08d6e9057b6f40cfa3f52c7cec3b38a40e93e5b6074da373c42810f8f7171396566c2ffacbb12\" +\n  \"5fcf57332ec7afb9264fc6d35a2bb9e20830093d469d92fef823020004ec2dd7f908ee9a7bfb6\" +\n  \"c5fd0134969d7dca1050eeffed66884866f97ae26895c32dd13c8e5cf6c9c37e4a1169ccdaa01\";\n\nclass NetworkMap extends React.Component {\n  componentDidUpdate() {\n    // console.log(\"pass tag here:\", this.props.passTag);\n    // console.log(\"show me\", this.props.searchedAnnots.data);\n    const selectedTag = this.props.passTag;\n    const array = this.props.searchedAnnots.data.filter(arr => {\n      return arr.references === undefined;\n    });\n\n    const annotArray = array.map(arr => {\n      return {\n        created: arr.created,\n        document: arr.document,\n        links: arr.links,\n        tags: arr.tags,\n        target: arr.target,\n        text: arr.text,\n        uri: arr.uri,\n        user: arr.user.substring(\n          arr.user.indexOf(\":\") + 1,\n          arr.user.indexOf(\"@\")\n        )\n      };\n    });\n    console.log(\"no references:\", annotArray);\n\n    const arrayModify = annotArray.reduce((o, cur) => {\n      var occurs = o.reduce((n, item, i) => {\n        return item.user === cur.user ? i : n;\n      }, -1);\n      if (occurs >= 0) {\n        o[occurs].text = o[occurs].text.concat(cur.text);\n      } else {\n        var obj = {\n          user: cur.user,\n          text: [cur.text]\n        };\n        o = o.concat([obj]);\n      }\n      return o;\n    }, []);\n\n    console.log(\"same user array:\", arrayModify);\n\n    const newNodesM = [];\n    const newNodesT = [];\n    const newLinksM = [];\n    const newLinksT = [];\n\n    // nodes data\n    for (var i = 0; i < arrayModify.length; i++) {\n      newNodesM.push({\n        id: \"A\" + i,\n        style: {\n          label: arrayModify[i].user,\n          fillColor: \"#65BCF8\",\n          lineColor: \"#59A8DF\"\n        },\n        loaded: true\n      });\n    }\n\n    var newNodesMM = [\n      {\n        id: \"T\",\n        style: {\n          label: selectedTag,\n          fillColor: \"#912F40\",\n          lineColor: \"#AB1927\"\n        },\n        loaded: true\n      },\n      ...newNodesM\n    ];\n\n    for (var j = 0; j < arrayModify.length; j++) {\n      if (arrayModify[j].text.length > 1) {\n        for (var k = 0; k < arrayModify[j].text.length; k++) {\n          newNodesT.push({\n            id: \"A\" + j + \"N\" + k,\n            style: {\n              label: arrayModify[j].text[k],\n              fillColor: \"#68CF9D\",\n              lineColor: \"#62BC90\"\n            },\n            loaded: true,\n            multiple: \"yes\"\n          });\n        }\n      } else {\n        newNodesT.push({\n          id: \"A\" + j + \"N\" + j,\n          style: {\n            label: array[j].text,\n            fillColor: \"#68CF9D\",\n            lineColor: \"#62BC90\"\n          },\n          loaded: true\n        });\n      }\n    }\n\n    const newNodes = newNodesMM.concat(newNodesT);\n    console.log(\"newNodes\", newNodes);\n\n    // links data\n    for (var i = 0; i < newNodesM.length; i++) {\n      newLinksM.push({\n        id: \"L\" + i,\n        from: newNodesM[i].id,\n        to: \"T\",\n        type: \"creators\"\n      });\n    }\n\n    for (var i = 0; i < newNodesT.length; i++) {\n      newLinksT.push({\n        id: \"LN\" + i,\n        from: newNodesT[i].id,\n        to: newNodesT[i].id.substring(\n          newNodesT[i].id.indexOf(\"A\"),\n          newNodesT[i].id.indexOf(\"N\")\n        ),\n        type: \"annots\"\n      });\n    }\n\n    var newLinks = newLinksM.concat(newLinksT);\n    console.log(\"newLinks\", newLinks);\n\n    if (selectedTag !== \"\") {\n      var t = new Chart({\n        container: document.getElementById(\"chartTimeChart\"),\n        area: {\n          style: { fillColor: \"#f9fbfd\" }\n        },\n        navigation: {\n          focusNodeExpansionRadius: 1,\n          initialNodes: [\"T\"],\n          mode: \"focusnodes\"\n        },\n        layout: {\n          mode: \"radial\",\n          nodeSpacing: 30\n        },\n        style: {\n          node: {\n            display: \"roundtext\",\n            lineWidth: 2,\n            lineColor: \"#2fc32f\"\n          },\n          nodeLabel: {\n            textStyle: { fillColor: \"white\" }\n          }\n          // nodeStyleFunction: function(node) {\n          //   node.image =\n          //     \"https://zoomcharts.com/dvsl/data/net-chart/friend-net/\" +\n          //     node.id +\n          //     \".png\";\n          //   node.label = node.data.name;\n          // }\n        },\n        data: {\n          preloaded: {\n            nodes: newNodes,\n            links: newLinks\n          }\n        },\n        toolbar: {\n          fullscreen: true,\n          enabled: true\n        },\n        interaction: {\n          resizing: {\n            enabled: false\n          }\n        }\n      });\n    }\n  }\n\n  renderAnnots() {\n    // console.log(\"annotprops\", this.props.searchedAnnots.data);\n    // console.log(\n    //   \"annotprops jason\",\n    //   JSON.stringify(this.props.searchedAnnots.data)\n    // );\n\n    if (this.props.passTag == \"\") {\n      return (\n        <div className=\"img-container\">\n          <img className=\"temp-image\" src={networkIcon} alt=\"network icon\" />\n          <p className=\"temp-text\">\n            <span className=\"text-color-red\">Choose</span> or{\" \"}\n            <span className=\"text-color-blue\">Search</span> the Tag <br /> to\n            Create Your Personal Learning Network\n          </p>\n        </div>\n      );\n    }\n\n    // return this.props.searchedAnnots.data.map(annot => {\n    //   return (\n    //     <div key={annot.id}>\n    //       <p>{annot.user}</p>\n    //       <p>{annot.text}</p>\n    //       <p className=\"tags\">{annot.tags.join(\", \")}</p>\n    //     </div>\n    //   );\n    // });\n  }\n\n  render() {\n    return (\n      <div className=\"map-container\">\n        <div id=\"chartTimeChart\" className=\"chart\" />\n        <p className=\"cover\" />\n        {/* <dvsl-test style={{ color: \"pink\" }}>\n          this is pink\n          <div className=\"DVSL-suppress-default-styles test-style\">\n            but this should be gray\n          </div>\n        </dvsl-test> */}\n\n        <div>{this.renderAnnots()}</div>\n      </div>\n    );\n  }\n}\n\nexport default NetworkMap;\n"]},"metadata":{},"sourceType":"module"}