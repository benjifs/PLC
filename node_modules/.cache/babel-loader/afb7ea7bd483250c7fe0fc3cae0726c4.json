{"ast":null,"code":"import _classCallCheck from \"/Users/wchen/Dropbox/UMN/2019_Spring/PLB_Capstone/PLB_Capstone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wchen/Dropbox/UMN/2019_Spring/PLB_Capstone/PLB_Capstone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wchen/Dropbox/UMN/2019_Spring/PLB_Capstone/PLB_Capstone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wchen/Dropbox/UMN/2019_Spring/PLB_Capstone/PLB_Capstone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wchen/Dropbox/UMN/2019_Spring/PLB_Capstone/PLB_Capstone/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wchen/Dropbox/UMN/2019_Spring/PLB_Capstone/PLB_Capstone/src/components/NetworkMap.js\";\nimport \"../css/NetworkMap.css\";\nimport React from \"react\";\nimport networkIcon from \"../assets/connection.png\";\nimport zc from \"@dvsl/zoomcharts\";\nimport AnnotSidebar from \"./Sidebar\";\nimport { connect } from \"react-redux\";\nimport { fetchFullAnnot } from \"../actions\";\nimport { Menu, Segment, Sidebar } from \"semantic-ui-react\";\nvar Chart = zc.NetChart; // Zoomcharts license and license key\n\nwindow.ZoomChartsLicense = \"ZCS-101rm718m: ZoomCharts SDK 30 day Free Trial License for che..@..l.com (valid for testing only); upgrades until: 2020-03-21\";\nwindow.ZoomChartsLicenseKey = \"39d8cd3eba17f98d5c4b5862a4db1effed5b48b4f96a0d9450\" + \"229bb8b24b0f012c2e95c31e6fdd092901628a73aa3511b6aca50b26575c1dc9c5033b42243a0\" + \"842344a7ea2b32b34cbfc406ea3ea1e1950de24892ebcf773a8157a460fa346039dbd27458a43\" + \"1b5a855d2da8c211526c28caba6402542aac71a8af5b2e3982387394dbf9f4b450da9b8017aad\" + \"08d6e9057b6f40cfa3f52c7cec3b38a40e93e5b6074da373c42810f8f7171396566c2ffacbb12\" + \"5fcf57332ec7afb9264fc6d35a2bb9e20830093d469d92fef823020004ec2dd7f908ee9a7bfb6\" + \"c5fd0134969d7dca1050eeffed66884866f97ae26895c32dd13c8e5cf6c9c37e4a1169ccdaa01\";\n\nvar NetworkMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NetworkMap, _React$Component);\n\n  function NetworkMap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NetworkMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NetworkMap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      annotId: \"\",\n      visible: false,\n      preTag: \"\"\n    };\n\n    _this.handleSidebarHide = function () {\n      return _this.setState({\n        visible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NetworkMap, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // console.log(\"pass tag here:\", this.props.passTag);\n      // console.log(\"show me\", this.props.searchedAnnots.data);\n      var selectedTag = this.props.passTag;\n      var array = this.props.searchedAnnots.data.filter(function (arr) {\n        return arr.references === undefined;\n      });\n      var annotArray = array.map(function (arr) {\n        return {\n          annotId: arr.id,\n          created: arr.created,\n          document: arr.document,\n          // links: arr.links,\n          tags: arr.tags,\n          target: arr.target,\n          text: arr.text,\n          uri: arr.uri,\n          incontext: arr.links.incontext,\n          user: arr.user.substring(arr.user.indexOf(\":\") + 1, arr.user.indexOf(\"@\"))\n        };\n      }); // console.log(\"no references:\", annotArray);\n\n      var arrayModify = annotArray.reduce(function (o, cur) {\n        var occurs = o.reduce(function (n, item, i) {\n          return item.user === cur.user ? i : n;\n        }, -1);\n\n        if (occurs >= 0) {\n          o[occurs].text = o[occurs].text.concat(cur.text);\n          o[occurs].annotId = o[occurs].annotId.concat(cur.annotId);\n        } else {\n          var obj = {\n            user: cur.user,\n            text: [cur.text],\n            annotId: [cur.annotId]\n          };\n          o = o.concat([obj]);\n        }\n\n        return o;\n      }, []); // console.log(\"same user array:\", arrayModify);\n\n      var newNodesM = [];\n      var newNodesT = [];\n      var newLinksM = [];\n      var newLinksT = []; // nodes data\n\n      for (var i = 0; i < arrayModify.length; i++) {\n        newNodesM.push({\n          id: \"A\" + i,\n          style: {\n            label: arrayModify[i].user,\n            fillColor: \"#65BCF8\",\n            // lineColor: \"#59A8DF\",\n            lineColor: \"rgba(89, 168, 223, 0.5)\"\n          },\n          loaded: true\n        });\n      }\n\n      var newNodesMM = [{\n        id: \"T\",\n        style: {\n          label: selectedTag,\n          fillColor: \"#912F40\",\n          // lineColor: \"#AB1927\",\n          lineColor: \"rgba(171, 25, 39, 0.5)\"\n        },\n        loaded: true\n      }].concat(newNodesM);\n\n      for (var j = 0; j < arrayModify.length; j++) {\n        if (arrayModify[j].text.length > 1) {\n          for (var k = 0; k < arrayModify[j].text.length; k++) {\n            newNodesT.push({\n              id: \"A\" + j + \"N\" + k,\n              style: {\n                label: arrayModify[j].text[k],\n                fillColor: \"#68CF9D\",\n                // lineColor: \"#62BC90\",\n                lineColor: \"rgba(98, 188, 144, 0.5)\"\n              },\n              annotId: arrayModify[j].annotId[k],\n              loaded: true,\n              multiple: \"yes\"\n            });\n          }\n        } else {\n          newNodesT.push({\n            id: \"A\" + j + \"N\" + j,\n            style: {\n              label: arrayModify[j].text[0],\n              fillColor: \"#68CF9D\",\n              // lineColor: \"#62BC90\",\n              lineColor: \"rgba(98, 188, 144, 0.5)\"\n            },\n            annotId: arrayModify[j].annotId[0],\n            loaded: true\n          });\n        }\n      }\n\n      var newNodes = newNodesMM.concat(newNodesT); // console.log(\"newNodes\", newNodes);\n      // links data\n\n      for (var i = 0; i < newNodesM.length; i++) {\n        newLinksM.push({\n          id: \"L\" + i,\n          from: newNodesM[i].id,\n          to: \"T\",\n          type: \"creators\"\n        });\n      }\n\n      for (var i = 0; i < newNodesT.length; i++) {\n        newLinksT.push({\n          id: \"LN\" + i,\n          from: newNodesT[i].id,\n          to: newNodesT[i].id.substring(newNodesT[i].id.indexOf(\"A\"), newNodesT[i].id.indexOf(\"N\")),\n          type: \"annots\"\n        });\n      }\n\n      var newLinks = newLinksM.concat(newLinksT); // console.log(\"newLinks\", newLinks);\n\n      var self = this;\n      var selfProps = this.props;\n\n      if (selectedTag !== \"\" && selectedTag !== self.state.preTag) {\n        var nodeStyle = function nodeStyle(node) {\n          if (node.hovered) {\n            node.radius = 38;\n            node.items = [{\n              aspectRatio: 0,\n              scaleWithZoom: true,\n              scaleWithSize: true,\n              maxWidth: 2,\n              padding: 2,\n              backgroundStyle: {\n                lineColor: \"transparent\"\n              }\n            }];\n\n            if (node.data.id.indexOf(\"N\") !== -1) {\n              node.items.push({\n                text: \"ANNOTATION\",\n                backgroundStyle: {\n                  fillColor: \"#68CF9D\"\n                },\n                textStyle: {\n                  fillColor: \"white\"\n                },\n                px: 0,\n                py: -1,\n                x: 0,\n                y: 12\n              });\n            } else if (node.data.id.indexOf(\"N\") === -1 && node.data.id !== \"T\") {\n              node.items.push({\n                text: \"USER\",\n                backgroundStyle: {\n                  fillColor: \"#65BCF8\"\n                },\n                textStyle: {\n                  fillColor: \"white\"\n                },\n                px: 0,\n                py: -1,\n                x: 0,\n                y: 12\n              });\n            }\n          } else {\n            node.radius = 30;\n            node.items = [{\n              text: \"\",\n              textStyle: {\n                fillColor: \"transparent\"\n              },\n              backgroundStyle: {\n                fillColor: \"transparent\",\n                lineColor: \"transparent\"\n              }\n            }];\n          }\n        };\n\n        var linkStyle = function linkStyle(link) {\n          if (link.hovered) {\n            link.radius = 2;\n            link.fillColor = \"#979797\";\n            link.shadowColor = \"#979797\";\n          } else {\n            link.radius = 1;\n            link.fillColor = \"#D8D8D8\";\n          }\n        };\n\n        var graphDoubleClick = function graphDoubleClick(event) {\n          event.preventDefault();\n\n          if (event.clickNode.data.annotId) {\n            self.setState({\n              annotId: event.clickNode.data.annotId,\n              visible: true,\n              preTag: selectedTag\n            });\n            selfProps.fetchFullAnnot(event.clickNode.data.annotId);\n          }\n        };\n\n        var t = new Chart({\n          container: document.getElementById(\"chartNetChart\"),\n          area: {\n            style: {\n              fillColor: \"#f9fbfd\"\n            }\n          },\n          navigation: {\n            focusNodeExpansionRadius: 1,\n            initialNodes: [\"T\"],\n            mode: \"focusnodes\"\n          },\n          layout: {\n            mode: \"radial\",\n            nodeSpacing: 30\n          },\n          style: {\n            node: {\n              display: \"roundtext\",\n              lineWidth: 5 // lineDash: [10, 2, 5, 2]\n\n            },\n            nodeStyleFunction: nodeStyle,\n            linkStyleFunction: linkStyle,\n            link: {\n              fillColor: \"#D8D8D8\" // lineDash: [10, 5, 5, 5]\n\n            },\n            nodeHovered: {\n              shadowBlur: 1\n            },\n            linkHovered: {\n              shadowBlur: 1\n            },\n            nodeLabel: {\n              textStyle: {\n                fillColor: \"white\"\n              } // nodeStyleFunction: function(node) {\n              //   node.image =\n              //     \"https://zoomcharts.com/dvsl/data/net-chart/friend-net/\" +\n              //     node.id +\n              //     \".png\";\n              //   node.label = node.data.name;\n              // }\n\n            }\n          },\n          data: {\n            preloaded: {\n              nodes: newNodes,\n              links: newLinks\n            }\n          },\n          events: {\n            onDoubleClick: graphDoubleClick\n          },\n          toolbar: {\n            fullscreen: true,\n            enabled: true\n          },\n          interaction: {\n            resizing: {\n              enabled: false\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"renderAnnots\",\n    value: function renderAnnots() {\n      // console.log(\"annotprops\", this.props.searchedAnnots.data);\n      // console.log(\n      //   \"annotprops jason\",\n      //   JSON.stringify(this.props.searchedAnnots.data)\n      // );\n      if (this.props.passTag == \"\") {\n        return React.createElement(\"div\", {\n          className: \"img-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"temp-image\",\n          src: networkIcon,\n          alt: \"network icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"temp-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text-color-red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, \"Choose\"), \" or\", \" \", React.createElement(\"span\", {\n          className: \"text-color-blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, \"Search\"), \" the Tag \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }), \" to Create Your Personal Learning Network\"));\n      } // return this.props.searchedAnnots.data.map(annot => {\n      //   return (\n      //     <div key={annot.id}>\n      //       <p>{annot.user}</p>\n      //       <p>{annot.text}</p>\n      //       <p className=\"tags\">{annot.tags.join(\", \")}</p>\n      //     </div>\n      //   );\n      // });\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var visible = this.state.visible;\n      var annotData = this.props.fullAnnots;\n      return React.createElement(\"div\", {\n        className: \"map-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(Sidebar.Pushable, {\n        as: Segment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        as: Menu,\n        animation: \"overlay\",\n        icon: \"labeled\",\n        inverted: true,\n        onHide: this.handleSidebarHide,\n        vertical: true,\n        visible: visible,\n        width: \"wide\",\n        direction: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(AnnotSidebar, {\n        fullAnnots: {\n          annotData: annotData\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      })), React.createElement(Sidebar.Pusher, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chartNetChart\",\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, this.renderAnnots())))));\n    }\n  }]);\n\n  return NetworkMap;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"full annot:\", state.fullAnnot);\n  return {\n    fullAnnots: state.fullAnnot\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchFullAnnot: fetchFullAnnot\n})(NetworkMap);","map":{"version":3,"sources":["/Users/wchen/Dropbox/UMN/2019_Spring/PLB_Capstone/PLB_Capstone/src/components/NetworkMap.js"],"names":["React","networkIcon","zc","AnnotSidebar","connect","fetchFullAnnot","Menu","Segment","Sidebar","Chart","NetChart","window","ZoomChartsLicense","ZoomChartsLicenseKey","NetworkMap","state","annotId","visible","preTag","handleSidebarHide","setState","selectedTag","props","passTag","array","searchedAnnots","data","filter","arr","references","undefined","annotArray","map","id","created","document","tags","target","text","uri","incontext","links","user","substring","indexOf","arrayModify","reduce","o","cur","occurs","n","item","i","concat","obj","newNodesM","newNodesT","newLinksM","newLinksT","length","push","style","label","fillColor","lineColor","loaded","newNodesMM","j","k","multiple","newNodes","from","to","type","newLinks","self","selfProps","nodeStyle","node","hovered","radius","items","aspectRatio","scaleWithZoom","scaleWithSize","maxWidth","padding","backgroundStyle","textStyle","px","py","x","y","linkStyle","link","shadowColor","graphDoubleClick","event","preventDefault","clickNode","t","container","getElementById","area","navigation","focusNodeExpansionRadius","initialNodes","mode","layout","nodeSpacing","display","lineWidth","nodeStyleFunction","linkStyleFunction","nodeHovered","shadowBlur","linkHovered","nodeLabel","preloaded","nodes","events","onDoubleClick","toolbar","fullscreen","enabled","interaction","resizing","annotData","fullAnnots","renderAnnots","Component","mapStateToProps","console","log","fullAnnot"],"mappings":"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","sourcesContent":["import \"../css/NetworkMap.css\";\nimport React from \"react\";\nimport networkIcon from \"../assets/connection.png\";\nimport zc from \"@dvsl/zoomcharts\";\nimport AnnotSidebar from \"./Sidebar\";\nimport { connect } from \"react-redux\";\nimport { fetchFullAnnot } from \"../actions\";\n\nimport { Menu, Segment, Sidebar } from \"semantic-ui-react\";\n\nlet Chart = zc.NetChart;\n\n// Zoomcharts license and license key\nwindow.ZoomChartsLicense =\n  \"ZCS-101rm718m: ZoomCharts SDK 30 day Free Trial License for che..@..l.com (valid for testing only); upgrades until: 2020-03-21\";\nwindow.ZoomChartsLicenseKey =\n  \"39d8cd3eba17f98d5c4b5862a4db1effed5b48b4f96a0d9450\" +\n  \"229bb8b24b0f012c2e95c31e6fdd092901628a73aa3511b6aca50b26575c1dc9c5033b42243a0\" +\n  \"842344a7ea2b32b34cbfc406ea3ea1e1950de24892ebcf773a8157a460fa346039dbd27458a43\" +\n  \"1b5a855d2da8c211526c28caba6402542aac71a8af5b2e3982387394dbf9f4b450da9b8017aad\" +\n  \"08d6e9057b6f40cfa3f52c7cec3b38a40e93e5b6074da373c42810f8f7171396566c2ffacbb12\" +\n  \"5fcf57332ec7afb9264fc6d35a2bb9e20830093d469d92fef823020004ec2dd7f908ee9a7bfb6\" +\n  \"c5fd0134969d7dca1050eeffed66884866f97ae26895c32dd13c8e5cf6c9c37e4a1169ccdaa01\";\n\nclass NetworkMap extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     annotId: \"\"\n  //   };\n  // }\n  state = {\n    annotId: \"\",\n    visible: false,\n    preTag: \"\"\n  };\n\n  componentDidUpdate() {\n    // console.log(\"pass tag here:\", this.props.passTag);\n    // console.log(\"show me\", this.props.searchedAnnots.data);\n    const selectedTag = this.props.passTag;\n    const array = this.props.searchedAnnots.data.filter(arr => {\n      return arr.references === undefined;\n    });\n\n    const annotArray = array.map(arr => {\n      return {\n        annotId: arr.id,\n        created: arr.created,\n        document: arr.document,\n        // links: arr.links,\n        tags: arr.tags,\n        target: arr.target,\n        text: arr.text,\n        uri: arr.uri,\n        incontext: arr.links.incontext,\n        user: arr.user.substring(\n          arr.user.indexOf(\":\") + 1,\n          arr.user.indexOf(\"@\")\n        )\n      };\n    });\n    // console.log(\"no references:\", annotArray);\n\n    const arrayModify = annotArray.reduce((o, cur) => {\n      var occurs = o.reduce((n, item, i) => {\n        return item.user === cur.user ? i : n;\n      }, -1);\n      if (occurs >= 0) {\n        o[occurs].text = o[occurs].text.concat(cur.text);\n        o[occurs].annotId = o[occurs].annotId.concat(cur.annotId);\n      } else {\n        var obj = {\n          user: cur.user,\n          text: [cur.text],\n          annotId: [cur.annotId]\n        };\n        o = o.concat([obj]);\n      }\n      return o;\n    }, []);\n\n    // console.log(\"same user array:\", arrayModify);\n\n    const newNodesM = [];\n    const newNodesT = [];\n    const newLinksM = [];\n    const newLinksT = [];\n\n    // nodes data\n    for (var i = 0; i < arrayModify.length; i++) {\n      newNodesM.push({\n        id: \"A\" + i,\n        style: {\n          label: arrayModify[i].user,\n          fillColor: \"#65BCF8\",\n          // lineColor: \"#59A8DF\",\n          lineColor: \"rgba(89, 168, 223, 0.5)\"\n        },\n        loaded: true\n      });\n    }\n\n    var newNodesMM = [\n      {\n        id: \"T\",\n        style: {\n          label: selectedTag,\n          fillColor: \"#912F40\",\n          // lineColor: \"#AB1927\",\n          lineColor: \"rgba(171, 25, 39, 0.5)\"\n        },\n        loaded: true\n      },\n      ...newNodesM\n    ];\n\n    for (var j = 0; j < arrayModify.length; j++) {\n      if (arrayModify[j].text.length > 1) {\n        for (var k = 0; k < arrayModify[j].text.length; k++) {\n          newNodesT.push({\n            id: \"A\" + j + \"N\" + k,\n            style: {\n              label: arrayModify[j].text[k],\n              fillColor: \"#68CF9D\",\n              // lineColor: \"#62BC90\",\n              lineColor: \"rgba(98, 188, 144, 0.5)\"\n            },\n            annotId: arrayModify[j].annotId[k],\n            loaded: true,\n            multiple: \"yes\"\n          });\n        }\n      } else {\n        newNodesT.push({\n          id: \"A\" + j + \"N\" + j,\n          style: {\n            label: arrayModify[j].text[0],\n            fillColor: \"#68CF9D\",\n            // lineColor: \"#62BC90\",\n            lineColor: \"rgba(98, 188, 144, 0.5)\"\n          },\n          annotId: arrayModify[j].annotId[0],\n          loaded: true\n        });\n      }\n    }\n\n    const newNodes = newNodesMM.concat(newNodesT);\n    // console.log(\"newNodes\", newNodes);\n\n    // links data\n    for (var i = 0; i < newNodesM.length; i++) {\n      newLinksM.push({\n        id: \"L\" + i,\n        from: newNodesM[i].id,\n        to: \"T\",\n        type: \"creators\"\n      });\n    }\n\n    for (var i = 0; i < newNodesT.length; i++) {\n      newLinksT.push({\n        id: \"LN\" + i,\n        from: newNodesT[i].id,\n        to: newNodesT[i].id.substring(\n          newNodesT[i].id.indexOf(\"A\"),\n          newNodesT[i].id.indexOf(\"N\")\n        ),\n        type: \"annots\"\n      });\n    }\n\n    var newLinks = newLinksM.concat(newLinksT);\n    // console.log(\"newLinks\", newLinks);\n\n    var self = this;\n    var selfProps = this.props;\n    if (selectedTag !== \"\" && selectedTag !== self.state.preTag) {\n      var t = new Chart({\n        container: document.getElementById(\"chartNetChart\"),\n        area: {\n          style: { fillColor: \"#f9fbfd\" }\n        },\n        navigation: {\n          focusNodeExpansionRadius: 1,\n          initialNodes: [\"T\"],\n          mode: \"focusnodes\"\n        },\n        layout: {\n          mode: \"radial\",\n          nodeSpacing: 30\n        },\n        style: {\n          node: {\n            display: \"roundtext\",\n            lineWidth: 5\n            // lineDash: [10, 2, 5, 2]\n          },\n          nodeStyleFunction: nodeStyle,\n          linkStyleFunction: linkStyle,\n          link: {\n            fillColor: \"#D8D8D8\"\n            // lineDash: [10, 5, 5, 5]\n          },\n          nodeHovered: {\n            shadowBlur: 1\n          },\n          linkHovered: {\n            shadowBlur: 1\n          },\n          nodeLabel: {\n            textStyle: { fillColor: \"white\" }\n          }\n          // nodeStyleFunction: function(node) {\n          //   node.image =\n          //     \"https://zoomcharts.com/dvsl/data/net-chart/friend-net/\" +\n          //     node.id +\n          //     \".png\";\n          //   node.label = node.data.name;\n          // }\n        },\n        data: {\n          preloaded: {\n            nodes: newNodes,\n            links: newLinks\n          }\n        },\n        events: {\n          onDoubleClick: graphDoubleClick\n        },\n        toolbar: {\n          fullscreen: true,\n          enabled: true\n        },\n        interaction: {\n          resizing: {\n            enabled: false\n          }\n        }\n      });\n\n      function nodeStyle(node) {\n        if (node.hovered) {\n          node.radius = 38;\n          node.items = [\n            {\n              aspectRatio: 0,\n              scaleWithZoom: true,\n              scaleWithSize: true,\n              maxWidth: 2,\n              padding: 2,\n              backgroundStyle: {\n                lineColor: \"transparent\"\n              }\n            }\n          ];\n\n          if (node.data.id.indexOf(\"N\") !== -1) {\n            node.items.push({\n              text: \"ANNOTATION\",\n              backgroundStyle: {\n                fillColor: \"#68CF9D\"\n              },\n              textStyle: { fillColor: \"white\" },\n              px: 0,\n              py: -1,\n              x: 0,\n              y: 12\n            });\n          } else if (node.data.id.indexOf(\"N\") === -1 && node.data.id !== \"T\") {\n            node.items.push({\n              text: \"USER\",\n              backgroundStyle: {\n                fillColor: \"#65BCF8\"\n              },\n              textStyle: { fillColor: \"white\" },\n              px: 0,\n              py: -1,\n              x: 0,\n              y: 12\n            });\n          }\n        } else {\n          node.radius = 30;\n          node.items = [\n            {\n              text: \"\",\n              textStyle: { fillColor: \"transparent\" },\n              backgroundStyle: {\n                fillColor: \"transparent\",\n                lineColor: \"transparent\"\n              }\n            }\n          ];\n        }\n      }\n\n      function linkStyle(link) {\n        if (link.hovered) {\n          link.radius = 2;\n          link.fillColor = \"#979797\";\n          link.shadowColor = \"#979797\";\n        } else {\n          link.radius = 1;\n          link.fillColor = \"#D8D8D8\";\n        }\n      }\n      function graphDoubleClick(event) {\n        event.preventDefault();\n        if (event.clickNode.data.annotId) {\n          self.setState({\n            annotId: event.clickNode.data.annotId,\n            visible: true,\n            preTag: selectedTag\n          });\n          selfProps.fetchFullAnnot(event.clickNode.data.annotId);\n        }\n      }\n    }\n  }\n\n  handleSidebarHide = () => this.setState({ visible: false });\n\n  renderAnnots() {\n    // console.log(\"annotprops\", this.props.searchedAnnots.data);\n    // console.log(\n    //   \"annotprops jason\",\n    //   JSON.stringify(this.props.searchedAnnots.data)\n    // );\n\n    if (this.props.passTag == \"\") {\n      return (\n        <div className=\"img-container\">\n          <img className=\"temp-image\" src={networkIcon} alt=\"network icon\" />\n          <p className=\"temp-text\">\n            <span className=\"text-color-red\">Choose</span> or{\" \"}\n            <span className=\"text-color-blue\">Search</span> the Tag <br /> to\n            Create Your Personal Learning Network\n          </p>\n        </div>\n      );\n    }\n\n    // return this.props.searchedAnnots.data.map(annot => {\n    //   return (\n    //     <div key={annot.id}>\n    //       <p>{annot.user}</p>\n    //       <p>{annot.text}</p>\n    //       <p className=\"tags\">{annot.tags.join(\", \")}</p>\n    //     </div>\n    //   );\n    // });\n  }\n\n  render() {\n    const { visible } = this.state;\n    const annotData = this.props.fullAnnots;\n    return (\n      <div className=\"map-container\">\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            icon=\"labeled\"\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={visible}\n            width=\"wide\"\n            direction=\"right\"\n          >\n            {/* <Menu.Item as=\"a\">\n              <Icon name=\"home\" />\n              Home\n            </Menu.Item>\n            <Menu.Item as=\"a\">\n              <Icon name=\"gamepad\" />\n              Games\n            </Menu.Item>\n            <Menu.Item as=\"a\">\n              <Icon name=\"camera\" />\n              Channels\n            </Menu.Item> */}\n            <AnnotSidebar fullAnnots={{ annotData }} />\n          </Sidebar>\n\n          <Sidebar.Pusher>\n            <Segment basic>\n              <div id=\"chartNetChart\" className=\"chart\" />\n              <p className=\"cover\" />\n              <div>{this.renderAnnots()}</div>\n              {/* <p>passId: {this.state.annotId}</p> */}\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  console.log(\"full annot:\", state.fullAnnot);\n  return { fullAnnots: state.fullAnnot };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchFullAnnot }\n)(NetworkMap);\n"]},"metadata":{},"sourceType":"module"}