{"ast":null,"code":"import _classCallCheck from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/src/components/NetworkMap.js\";\nimport \"../css/NetworkMap.css\";\nimport React from \"react\";\nimport networkIcon from \"../assets/connection.png\";\nimport zc from \"@dvsl/zoomcharts\";\nvar Chart = zc.NetChart; // Zoomcharts license and license key\n\nwindow.ZoomChartsLicense = \"ZCS-101rm718m: ZoomCharts SDK 30 day Free Trial License for che..@..l.com (valid for testing only); upgrades until: 2020-03-21\";\nwindow.ZoomChartsLicenseKey = \"39d8cd3eba17f98d5c4b5862a4db1effed5b48b4f96a0d9450\" + \"229bb8b24b0f012c2e95c31e6fdd092901628a73aa3511b6aca50b26575c1dc9c5033b42243a0\" + \"842344a7ea2b32b34cbfc406ea3ea1e1950de24892ebcf773a8157a460fa346039dbd27458a43\" + \"1b5a855d2da8c211526c28caba6402542aac71a8af5b2e3982387394dbf9f4b450da9b8017aad\" + \"08d6e9057b6f40cfa3f52c7cec3b38a40e93e5b6074da373c42810f8f7171396566c2ffacbb12\" + \"5fcf57332ec7afb9264fc6d35a2bb9e20830093d469d92fef823020004ec2dd7f908ee9a7bfb6\" + \"c5fd0134969d7dca1050eeffed66884866f97ae26895c32dd13c8e5cf6c9c37e4a1169ccdaa01\";\n\nvar NetworkMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NetworkMap, _React$Component);\n\n  function NetworkMap() {\n    _classCallCheck(this, NetworkMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NetworkMap).apply(this, arguments));\n  }\n\n  _createClass(NetworkMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var t = new Chart({\n        container: document.getElementById(\"chartTimeChart\"),\n        navigation: {\n          focusNodeExpansionRadius: 1,\n          initialNodes: [\"m-1\"],\n          mode: \"focusnodes\"\n        },\n        layout: {\n          mode: \"radial\",\n          nodeSpacing: 30\n        },\n        style: {\n          node: {\n            display: \"image\",\n            lineWidth: 2,\n            lineColor: \"#2fc32f\",\n            imageCropping: true\n          },\n          nodeStyleFunction: function nodeStyleFunction(node) {\n            node.image = \"https://zoomcharts.com/dvsl/data/net-chart/friend-net/\" + node.id + \".png\";\n            node.label = node.data.name;\n          }\n        },\n        data: [{\n          url: \"https://zoomcharts.com/data/friend-net-tree.json\"\n        }],\n        toolbar: {\n          fullscreen: true,\n          enabled: true\n        },\n        interaction: {\n          resizing: {\n            enabled: false\n          }\n        }\n      });\n    }\n  }, {\n    key: \"renderAnnots\",\n    value: function renderAnnots() {\n      console.log(\"annotprops\", this.props.searchedAnnots.data);\n\n      if (this.props.searchedAnnots.data == \"\") {\n        return React.createElement(\"div\", {\n          className: \"img-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"temp-image\",\n          src: networkIcon,\n          alt: \"network icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"temp-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text-color-red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Choose\"), \" or\", \" \", React.createElement(\"span\", {\n          className: \"text-color-blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Search\"), \" the Tag \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), \" to Create Your Personal Learning Network\"));\n      }\n\n      return this.props.searchedAnnots.data.map(function (annot) {\n        return React.createElement(\"div\", {\n          key: annot.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, annot.user), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, annot.text), React.createElement(\"p\", {\n          className: \"tags\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, annot.tags.join(\", \")));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"map-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chartTimeChart\",\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.renderAnnots()));\n    }\n  }]);\n\n  return NetworkMap;\n}(React.Component);\n\nexport default NetworkMap;","map":{"version":3,"sources":["/Users/wchen/Dropbox/UMN/2019_Spring/Capstone/Capstone Project/tryGraph/capstone/src/components/NetworkMap.js"],"names":["React","networkIcon","zc","Chart","NetChart","window","ZoomChartsLicense","ZoomChartsLicenseKey","NetworkMap","t","container","document","getElementById","navigation","focusNodeExpansionRadius","initialNodes","mode","layout","nodeSpacing","style","node","display","lineWidth","lineColor","imageCropping","nodeStyleFunction","image","id","label","data","name","url","toolbar","fullscreen","enabled","interaction","resizing","console","log","props","searchedAnnots","map","annot","user","text","tags","join","renderAnnots","Component"],"mappings":"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","sourcesContent":["import \"../css/NetworkMap.css\";\nimport React from \"react\";\nimport networkIcon from \"../assets/connection.png\";\nimport zc from \"@dvsl/zoomcharts\";\n\nlet Chart = zc.NetChart;\n\n// Zoomcharts license and license key\nwindow.ZoomChartsLicense =\n  \"ZCS-101rm718m: ZoomCharts SDK 30 day Free Trial License for che..@..l.com (valid for testing only); upgrades until: 2020-03-21\";\nwindow.ZoomChartsLicenseKey =\n  \"39d8cd3eba17f98d5c4b5862a4db1effed5b48b4f96a0d9450\" +\n  \"229bb8b24b0f012c2e95c31e6fdd092901628a73aa3511b6aca50b26575c1dc9c5033b42243a0\" +\n  \"842344a7ea2b32b34cbfc406ea3ea1e1950de24892ebcf773a8157a460fa346039dbd27458a43\" +\n  \"1b5a855d2da8c211526c28caba6402542aac71a8af5b2e3982387394dbf9f4b450da9b8017aad\" +\n  \"08d6e9057b6f40cfa3f52c7cec3b38a40e93e5b6074da373c42810f8f7171396566c2ffacbb12\" +\n  \"5fcf57332ec7afb9264fc6d35a2bb9e20830093d469d92fef823020004ec2dd7f908ee9a7bfb6\" +\n  \"c5fd0134969d7dca1050eeffed66884866f97ae26895c32dd13c8e5cf6c9c37e4a1169ccdaa01\";\n\nclass NetworkMap extends React.Component {\n  componentDidMount() {\n    var t = new Chart({\n      container: document.getElementById(\"chartTimeChart\"),\n      navigation: {\n        focusNodeExpansionRadius: 1,\n        initialNodes: [\"m-1\"],\n        mode: \"focusnodes\"\n      },\n      layout: {\n        mode: \"radial\",\n        nodeSpacing: 30\n      },\n      style: {\n        node: {\n          display: \"image\",\n          lineWidth: 2,\n          lineColor: \"#2fc32f\",\n          imageCropping: true\n        },\n        nodeStyleFunction: function(node) {\n          node.image =\n            \"https://zoomcharts.com/dvsl/data/net-chart/friend-net/\" +\n            node.id +\n            \".png\";\n          node.label = node.data.name;\n        }\n      },\n      data: [\n        {\n          url: \"https://zoomcharts.com/data/friend-net-tree.json\"\n        }\n      ],\n      toolbar: {\n        fullscreen: true,\n        enabled: true\n      },\n      interaction: {\n        resizing: {\n          enabled: false\n        }\n      }\n    });\n  }\n\n  renderAnnots() {\n    console.log(\"annotprops\", this.props.searchedAnnots.data);\n\n    if (this.props.searchedAnnots.data == \"\") {\n      return (\n        <div className=\"img-container\">\n          <img className=\"temp-image\" src={networkIcon} alt=\"network icon\" />\n          <p className=\"temp-text\">\n            <span className=\"text-color-red\">Choose</span> or{\" \"}\n            <span className=\"text-color-blue\">Search</span> the Tag <br /> to\n            Create Your Personal Learning Network\n          </p>\n        </div>\n      );\n    }\n\n    return this.props.searchedAnnots.data.map(annot => {\n      return (\n        <div key={annot.id}>\n          <p>{annot.user}</p>\n          <p>{annot.text}</p>\n          <p className=\"tags\">{annot.tags.join(\", \")}</p>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"map-container\">\n        <div id=\"chartTimeChart\" className=\"chart\" />\n        <div>{this.renderAnnots()}</div>\n      </div>\n    );\n  }\n}\n\nexport default NetworkMap;\n"]},"metadata":{},"sourceType":"module"}